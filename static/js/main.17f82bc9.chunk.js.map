{"version":3,"sources":["components/Tab.js","components/TabList.js","components/Home.js","components/Videos.js","components/Projects.js","components/movie_element.js","components/Dropdown.js","components/config.js","components/MovieGallery.js","components/AddMovie.js","components/CreateList.js","components/Body.js","App.js","index.js"],"names":["Tab","addStyling","props","tab","id","activeTab","backgroundColor","color","className","style","this","onClick","changeTab","bind","title","Component","TabList","tabs","map","eachTab","Movie","state","movieData","open","axios","get","movieid","then","res","data","setState","Poster","GridListTile","key","indexKey","cols","rows","src","alt","Title","GridListTileBar","titlePosition","actionIcon","IconButton","aria-label","changeIndexKey","setOpen","changeMoviePoster","actionPosition","background","width","height","Dropdown","lists","useState","handleClickOutside","onSubmit","handleSubmit","value","onChange","handleChange","type","s","index","clickOutsideConfig","config","onClickOutside","apiKey","authDomain","databaseURL","firebase","require","MovieGallery","moviePoster","isOpen","toggle","visible","movies_list","perf_listSelection","listShown","movie_perf_pairs","changeKey","k","o","loadmore","listSelectOnChange","ModalDropOptions","perf_list","apps","length","initializeApp","old","console","log","AllLists","database","ref","allMovies","child","recvObjects","on","snapshot","val","forEach","childSnapshot","recvIMDbID","recvTitle","recvDirector","recvRating","recvPosterURL","recvActors","recvGenre","recvKey","push","IMDbID","PosterURL","Director","Actors","Genre","Rating","perfArraySelection","item","moviesMasterArray","moviesInOneArray","eachList","singleMovie","forceUpdate","eachPair","perfName","e","target","active_list","list_selected","display","name","GridList","cellHeight","spacing","slice","movie","Modal","onClose","aria-labelledby","aria-describedby","top","left","position","justifyContent","textAlign","paddingTop","paddingLeft","paddingRight","lineHeight","imdbRating","newMovieArray","alignItems","AddMovie","formInputDivStyle","fontSize","useEffect","newMovieID","values","setValues","event","preventDefault","alreadyExist","receivedJSON","packData","default","url","response","set","setVisible","backgroundRepeat","fontFamily","fontStyle","letterSpacing","noValidate","fontWeight","marginBottom","Alert","fade","CreateList","newlist","Body","displayContent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17f82bc9.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Tab extends Component {\n    //specify rules by adding functions\n    addStyling = () => {\n        if(this.props.tab.id === this.props.activeTab){\n            return {\n                backgroundColor: 'Navy',\n                color: '#6e7fc9'\n            }    //specifying styling in function\n        }else   {\n            return {\n                backgroundColor: 'white'\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Tab\"\n            style={this.addStyling()}\n                onClick={this.props.changeTab.bind(this,this.props.tab.id)}>\n            <font className='each-tab'>\n            {this.props.tab.title}  \n\t\t\t</font>       \n            <h1></h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Tab from './Tab'\n//active state in here is props. Props is used to pass information to child state \nexport default class TabList extends Component {\n    render() {\n        return this.props.tabs.map((eachTab) => (//*Looping* over each tabs objects, and have them printed (by default vertically) on the screen\n            <Tab tab={eachTab} activeTab={this.props.activeTab} changeTab={this.props.changeTab}/>   //in tabs.js it access the actual name by {this.props.tab.title}\n        ));\n    }\n}\n","import React, { Component } from 'react'\nimport \"../App.css\"\nexport default class Home extends Component {\n    componentDidMount(){\n        document.title=\"www.luyao-han.online\"     //define page name\n      }\n    render() {\n        const titleSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#f0932b',\n            backgroundRepeat: 'repeat-y',\n            height: '20vh',\n\t\t\tposition: 'relative'\n        }\n\n        const introSectionStyle={\n            height:'100vh',\n            width: '70vw',\n            position: 'relative',\n            padding: '30px'\n        }\n\n        const subSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#f0932b',\n\t\t\tbackgroundRepeat: 'repeat-y',\n            position: 'relative',\n            height: '75vh',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontFamily: 'Raleway, sans-serif',\n            fontStyle: '32px', \n            textTransform: 'uppercase',\n            letterSpacing: '8px'\n        }\n\n        const bodyStyle={\n\t\t\tmargin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#f0932b',\n\t\t\tbackgroundRepeat: 'repeat-y',\n\t\t\tposition: 'relative'\n        }\n\n        \n        const homeTitleStyle={\n            fontFamily: 'Monoton,cursive',\n            fontSize: '5vw',\n            position: 'relative',\n            top: '1vw', \n            left: '1vw', \n            color: 'white',\n        }\n\n\n        return (\n            <html>\n                <section style={titleSectionStyle}>\n\t\t            <font style={homeTitleStyle} >\n\t\t\t            Welcome to my website \n\t\t            </font>\n                </section>\n                \n            </html>\n\t\n        )\n    }\n}\n","import React, { Component } from 'react';\n\n\nexport default class Videos extends Component {\n    componentDidMount(){\n        document.title=\"www.luyao-han.online\"     //define page name\n      }\n    render() {\n        const contentSectionStyle={\n            height:'120vh', \n            width: '100vw', \n            display: 'block', \n            alignItems: 'center',\n            justifyContent: 'center', \n            position: 'relative',\n            top:'5vh'\n        }\n\n        const subSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#7ed6df',\n\t\t\tbackgroundRepeat: 'repeat-y',\n            position: 'relative',\n            height: '75vh',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontFamily: 'Raleway, sans-serif',\n            fontStyle: '32px', \n            textTransform: 'uppercase',\n            letterSpacing: '8px'\n        }\n\n        const bodyStyle={\n\t\t\tmargin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#7ed6df',\n\t\t\tbackgroundRepeat: 'repeat-y',\n\t\t\tposition: 'relative'\n        }\n\n\n        const titleSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#7ed6df',\n            backgroundRepeat: 'repeat-y',\n            height: '20vh',\n\t\t\tposition: 'relative'\n        }\n        const homeTitleStyle={\n            fontFamily: 'Monoton,cursive',\n            fontSize: '5vw',\n            position: 'relative',\n            top: '1vw', \n            left: '1vw', \n            color: 'white',\n        }\n\n        const youtubeFrameStyle={\n            position: \"relative\",\n            width: '30vw',\n            height: '30vh',\n            margin: '2vw'\n        }\n        return (\n            <html>\n                <section style={titleSectionStyle}>\n\t\t            <font style={homeTitleStyle} >\n\t\t\t            Videos\n\t\t            </font>\n                </section>\n                <body style={bodyStyle}>\n                    <section className=\"pictures-content\" style={contentSectionStyle}>\n                    <iframe style={youtubeFrameStyle} src={'https://www.youtube.com/embed/lnVGgiAaswA'} allowFullScreen/>\n                    <iframe style={youtubeFrameStyle} src={'https://www.youtube.com/embed/Pr141CuQJmg'} allowFullScreen/>\n                    <iframe style={youtubeFrameStyle} src={'https://www.youtube.com/embed/jO1bDcLARtQ'} allowFullScreen/>\n                    <iframe style={youtubeFrameStyle} src={'https://www.youtube.com/embed/5fgy8iNH29A'} allowFullScreen/>    \n\n                        </section>\n                    <section style={subSectionStyle}>\n                        Section 1\t\n                    </section>\n                    <section style={subSectionStyle}>\n                        Section 2\t\n                    </section>\n                    <section style={subSectionStyle}>\n                        Section 3\t\n                    </section>\n                </body>\n            </html>\n\t\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n\n\n\n\nexport default class Images extends Component {\n    componentDidMount(){\n        document.title=\"www.luyao-han.online\"     //define page name\n      }\n    render() {\n       \n        const contentSectionStyle={\n            height:'300vh', \n            width: '100vw',\n            display: 'block',\n            alignItems: 'center',\n            justifyContent: 'center', \n            position:'relative'\n        }\n\n        const subSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#6e7fc9',\n\t\t\tbackgroundRepeat: 'repeat-y',\n            position: 'relative',\n            height: '75vh',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontFamily: 'Raleway, sans-serif',\n            fontStyle: '32px', \n            textTransform: 'uppercase',\n            letterSpacing: '8px'\n        }\n\n        const bodyStyle={\n\t\t\tmargin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#6e7fc9',\n\t\t\tbackgroundRepeat: 'repeat-y',\n\t\t\tposition: 'relative'\n        }\n\n        \n        const imageStyle={\n            position: 'relative', \n            paddingTop:'20px', \n            paddingRight:'20px',\n            top: '1vh', \n            left: '1vw', \n            width:'300px', \n            height:'200px',\n            //zIndex:\"1000\"\n        }\n\n        const titleSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#6e7fc9',\n            backgroundRepeat: 'repeat-y',\n            height: '20vh',\n\t\t\tposition: 'relative'\n        }\n        const homeTitleStyle={\n            fontFamily: 'Monoton,cursive',\n            fontSize: '5vw',\n            position: 'relative',\n            top: '1vw', \n            left: '1vw', \n            color: 'white',\n        }\n\n        const projectTitleStyle={\n            fontFamily: 'Orbitron, sans-serif',\n            fontSize: '1vw',\n            position: 'relative',\n            top: '-3vw', \n            left: '5vw', \n            color: 'white',\n        }\n\n\n        return (\n            <html>\n                <section style={titleSectionStyle}>\n\t\t            <font style={homeTitleStyle} >\n\t\t\t            Images\n\t\t            </font>\n                </section>\n                \n            </html>\n\t\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport SubjectIcon from \"@material-ui/icons/Subject\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nfunction titleBarStyle() {\n  return {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n\n    width: \"100%\",\n    height: \"100%\",\n  };\n}\n\nclass Movie extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movieData: {},\n      open: false,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://www.omdbapi.com/?apikey=16e23e6c&i=${this.props.movieid}&plot=full`\n      )\n      .then((res) => res.data)\n      .then((res) => {\n        this.setState({ movieData: res });\n      });\n  }\n\n  render() {\n    if (!this.state.movieData.Poster || this.state.movieData === \"N/A\")\n      return null;\n    return (\n      <GridListTile key={this.props.indexKey} cols={1} rows={2}>\n        <img\n          src={this.state.movieData.Poster}\n          alt={this.state.movieData.Title}\n        />\n        \n        <GridListTileBar\n          title={this.state.movieData.Title}  //display the movie name\n          titlePosition=\"top\"   \n          actionIcon={\n            <div>\n            <IconButton\n              aria-label={`info ${this.state.movieData.Title}`}\n              style={{ color: \"white\" }}\n              onClick={() => {\n                this.props.changeIndexKey(this.props.indexKey);\n                this.props.setOpen(true);\n                this.props.changeMoviePoster(this.state.movieData);\n                  //<DeleteSweepIcon>\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n\n            \n            </div>\n          }\n          actionPosition=\"left\"\n          className={titleBarStyle()}\n        />\n      </GridListTile>\n    );\n  }\n}\n\nexport default Movie;","//Learned from source https://github.com/karlhadwen/react-dropdown-menu/blob/master/src/Dropdown.js\nimport React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Dropdown({lists}) {\n  const [open, setOpen] = useState(false);\n  const toggle = () => setOpen(!open);\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  return (\n    <div>\n       <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite flavor:\n          <select value={this.state.value} onChange={this.handleChange}>            \n            <option value=\"grapefruit\">Grapefruit</option>\n            <option value=\"lime\">Lime</option>\n            <option value=\"coconut\">Coconut</option>\n            <option value=\"mango\">Mango</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      {lists.map((s,index) => (\n            <h7> \n             {s.value}\n            </h7>\n          ))}\n    </div>\n      \n  );\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside,\n};\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);","/*register app from firebase.google.com and get apiKey, authDomain, and databaseURL*/ \nconst config = {\n    apiKey: \"AIzaSyCHsVe-v2Yumme2Ks1XhWVVIYerA5bzWws\",\n    authDomain: \"myreactsite.firebaseapp.com\",\n    databaseURL: \"https://myreactsite.firebaseio.com\",\n  }\nexport default config;\n\n//killall -9 node\n//react-scripts start         ","import React, { useState, Component } from \"react\";\n\nimport Movie from \"./movie_element.js\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Modal from \"@material-ui/core/Modal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport config from './config.js'\n\n\nfunction rootStyle() {\n  return {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  };\n}\nfunction GridListStyle() {\n  return {\n    width: \"95%\",\n    height: \"85vh\",\n    //position: \"fixed\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    //transform: \"translateZ(0)\",\n  };\n}\nfunction info() {\n  return {\n    width: \"auto\",\n    height: \"auto\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingTop: \"23%\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    lineHeight: \"200%\",\n    backgroundColor: \"#c3cfe2\",\n  };\n}\nfunction getModalStyle() {\n  return {\n    top: \"20%\",\n    left: \"20%\",\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    display: \"flex\",\n  };\n}\n\n\n//Fetch data from firebase\nconst firebase = require('firebase');\n\n\nexport default class MovieGallery extends Component {\n    \n  \n  constructor() {\n        super();\n        this.state = {\n          moviePoster: \"\",\n          open: false,\n          key: 1,\n          isOpen: false,\n          toggle: 0,\n          visible: 8,\n          movies_list: [], \n          perf_listSelection: [],  \n          //perf_list: [],  //All, wannaWatch, Watched, etc\n          listShown:[],\n          movie_perf_pairs:[]\n        };\n        this.changeMoviePoster = (data) => {\n          this.setState({\n            moviePoster: data,\n          });\n        };\n        this.changeKey = (k) => {\n          this.setState({\n            key: k,\n          });\n        };\n        this.setOpen = (o) => {\n          this.setState({\n            open: o,\n          });\n        };\n\n        this.loadmore = this.loadmore.bind(this);  //bind evnt handler! \n        this.listSelectOnChange = this.listSelectOnChange.bind(this)\n        this.ModalDropOptions = this.ModalDropOptions.bind(this)\n        this.perf_list = [];\n      //initialize firebase\n        if(!firebase.apps.length){\n          firebase.initializeApp(config)\n      }\n\n    \n      \n\n      \n\n  }\n\n  //load more button \n  loadmore(){         //binded in constructor\n    this.setState((old)=>{\n      return {visible: old.visible + 8}  //trys to set visible 8 more movies   \n    })\n  }\n  \n  \n  \n  componentWillMount(){\n\n    if(!firebase.apps.length){\n      firebase.initializeApp(config)\n  }\n    console.log(\"component will mount!\")\n      let AllLists = firebase.database().ref('AllLists')\n      let allMovies = AllLists.child('All')\n\n      //\n      //  Update all movies info from data base\n      //\n      var recvObjects = [];\n      var cnt = 0;\n      allMovies.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n\n        //loop through all movies in database\n        snapshot.forEach(function(childSnapshot){\n          //receive single movie info\n          var recvIMDbID        = childSnapshot.child(\"IMDbID\").val();\n          var recvTitle         = childSnapshot.child(\"Title\").val();\n          var recvDirector      = childSnapshot.child(\"Director\").val();\n          var recvRating        = childSnapshot.child(\"Rating\").val();\n          var recvPosterURL     = childSnapshot.child(\"PosterURL\").val();\n          var recvActors        = childSnapshot.child(\"Actors\").val();\n          var recvGenre         = childSnapshot.child(\"Genre\").val();\n          var recvKey               = childSnapshot.child(\"IMDbID\").val();\n          recvObjects.push({\n              key:        recvKey,\n              IMDbID:     recvIMDbID,      \n              Title:      recvTitle,\n              PosterURL:  recvPosterURL,\n              Director:   recvDirector,\n              Actors:     recvActors,\n              Genre:      recvGenre,\n              Rating:     recvRating\n          })\n          //make into object      \n        })\n        \n\n        this.setState({\n          movies_list:[...this.state.movies_list,...recvObjects]\n        })\n        //console.log(\"in state: \" + this.state.movies_list) //expected print [object object] ... \n      })\n\n      //\n      //  Update all lists names only\n      //\n      // let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n      var perfArraySelection = [];\n      var cnt = 0;\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n        //loop through all movies in database\n        snapshot.forEach((item, index) =>{\n          //receive single movie info\n          perfArraySelection.push(item.key); //get the list\n          \n          //console.log(\"perference list name is: \" + perfArraySelection);\n        \n          //make into object      \n        })\n        this.setState({ \n          perf_listSelection:[...this.state.perf_listSelection,...perfArraySelection]\n        })\n       \n      });\n  \n\n\n       //\n      //  Gets all the lists and list movie info\n      //\n      //let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n      var perfArray = [];\n      var movie = [];\n      var cnt = 0;\n      var moviesMasterArray = []; //used to collect all movie lists \n      var moviesInOneArray = [];  //records all movies in one list\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n        //loop through all movies in database\n        \n        //console.log(\"here\");\n        snapshot.forEach((eachList, index) =>{ //all the lists \n              //console.log(eachList.key);          //print each list name     \n              eachList.forEach(function(singleMovie){    //print movie name\n                            //console.log(singleMovie.key+\": \"+singleMovie.val()); //generates random key\n\n                            //console.log(\"movie title: \"+singleMovie.child('Title').val())\n                            var recvIMDbID        = singleMovie.child(\"IMDbID\").val();\n                            var recvTitle         = singleMovie.child(\"Title\").val();\n                            var recvDirector      = singleMovie.child(\"Director\").val();\n                            var recvRating        = singleMovie.child(\"Rating\").val();\n                            var recvPosterURL     = singleMovie.child(\"PosterURL\").val();\n                            var recvActors        = singleMovie.child(\"Actors\").val();\n                            var recvGenre         = singleMovie.child(\"Genre\").val();\n                            var recvKey           = singleMovie.child(\"IMDbID\").val();\n                            moviesInOneArray.push({\n                                key:        recvKey,\n                                IMDbID:     recvIMDbID,      \n                                Title:      recvTitle,\n                                PosterURL:  recvPosterURL,\n                                Director:   recvDirector,\n                                Actors:     recvActors,\n                                Genre:      recvGenre,\n                                Rating:     recvRating\n                            })\n                  \n              })\n              //collected all movies in one list\n        })\n        moviesMasterArray.push(moviesInOneArray);\n        //console.log(moviesMasterArray)\n        \n        this.perf_list=moviesMasterArray;\n        // this.setState({\n        //   perf_list:[...moviesMasterArray]\n        // })\n        // /console.log(\"moviesMasterArray\"+moviesMasterArray)\n        //console.log(\"perf list is \"+this.state.perf_list)\n        this.forceUpdate();\n        //console.log(this.state.perf_list[1]); //sets to the All list\n        \n        //set to listShown so that gallery display the correct posters\n        this.setState({\n          listShown:[...this.perf_list[0]]\n        })\n      });\n      this.forceUpdate();\n\n\n\n\n\n      //\n      //  Prepare movie-perferencelist pairs\n      //\n      console.log(\"printing perf names\")\n      var movie_perf_Array = [];\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        snapshot.child('movie_perf_pairs').forEach((eachPair, index) =>{ //all the lists \n                var recvIMDbID        = eachPair.child(\"IMDbID\").val();\n                console.log(\"movie is: \" + recvIMDbID)\n                eachPair.child('perfs').forEach((perfName,index)=>{\n                    console.log(perfName.val())\n                })\n                \n              //collected all movies in one list\n        })\n        moviesMasterArray.push(moviesInOneArray);\n        //console.log(moviesMasterArray)\n        \n        this.perf_list=moviesMasterArray;\n        // this.setState({\n        //   perf_list:[...moviesMasterArray]\n        // })\n        // /console.log(\"moviesMasterArray\"+moviesMasterArray)\n        //console.log(\"perf list is \"+this.state.perf_list)\n        this.forceUpdate();\n        //console.log(this.state.perf_list[1]); //sets to the All list\n        \n        //set to listShown so that gallery display the correct posters\n        this.setState({\n          listShown:[...this.perf_list[0]]\n        })\n      });\n      this.forceUpdate();\n      \n      \n}\n\n\n\n\n\n\n\n  //user chosed list of movie to display in gallery\n  listSelectOnChange(e) {\n    console.log(\"target value: \"+e.target.index)\n    //set it to the state\n    this.setState({\n      [this.state.active_list]: this.state.perf_listSelection[e.target.index]\n    });\n\n    console.log(\"list selected: \"+this.state.list_selected)\n  }\n\n\n\n  ModalDropOptions(e){\n\n    this.state.perf_listSelection.map((e, key) => {\n      \n      return <option key={key} value={e.value}>{e}</option>;\n    })\n    \n  }\n\n  render() {\n    \n\n    return (\n      <div style={{display:\"block\"}}>\n        <div>\n          {/*Dropdown menu*/}\n          <select name=\"perf_listSelection\" onChange={this.listSelectOnChange}>\n            {this.state.perf_listSelection.map((e, key) => {\n              //console.log(\"key is \"+ key)\n              return <option key={key} value={e.value}>{e}</option>;\n            })}\n            \n          </select>\n        </div>\n        \n          <div>\n            \n                \n            \n\n          </div>\n\n\n        <div>\n          <GridList cellHeight={150} spacing={1} style={GridListStyle()}>\n                {/*{this.state.movies_list.slice(0,this.state.visible).map((movie) => (  */}\n                  \n                \n                  {(this.state.movies_list).slice(0,this.state.visible).map((movie) => (\n                    \n                  <Movie\n                    movieid={movie.IMDbID}\n                    indexKey={movie.key}\n                    changeIndexKey={this.changeKey}\n                    setOpen={this.setOpen}\n                    changeMoviePoster={this.changeMoviePoster}\n                  />\n                ))}\n          </GridList>\n\n\n\n\n          <Modal\n            open={this.state.open}\n            onClose={() => {\n              this.setOpen(false);\n            }}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {\n              <div style={getModalStyle()}>\n                <div style={info()}>\n                  <h7>\n                    Title: {this.state.moviePoster.Title} <br />\n                    Director: {this.state.moviePoster.Director} <br />\n                    Genre: {this.state.moviePoster.Genre}\n                    <br />\n                    IMDB Rating: {this.state.moviePoster.imdbRating}\n\n                  </h7>\n                    <div>\n                      <select name=\"perf_listSelection\" >\n                        {\n                          this.ModalDropOptions\n                          \n                        }\n                      </select>\n                    </div>\n                </div>\n                <img\n                  src={this.state.moviePoster.Poster}\n                  height={\"auto\"}\n                  alt={\"poster\"}\n                />\n\n                <IconButton onClick={() => {\n                    {/*Remember that in state key === IMDBkey!*/} \n                    const  deleteTargetKey = this.state.key; //key, which is IMDbID of the movie\n                    var newMovieArray = [];\n                    console.log('delete target' + this.state.key);\n                    this.state.movies_list.forEach((item, index) => {\n                      console.log('item key' + item.key);\n                      if(item.key != this.state.key){\n                        newMovieArray.push(item);  //push every item except delete target\n                        console.log(\"here\")\n                        console.log(item.Title)\n                      }\n                    });\n                    console.log(newMovieArray)\n                    \n                    \n                     this.setState({\n                       movies_list:[...newMovieArray]    \n                     })\n                     //this.forceUpdate();\n                     //firebase.database().ref('AllLists').child(\"All\").child(this.state.key).remove()\n                     \n                    this.setOpen(false);\n                     //this.forceUpdate();\n\n                  }} > \n                \n                  <DeleteSweepIcon\n                    style={{ color: \"red\" }}\n                  />\n                </IconButton>\n                \n              </div>\n            }\n          </Modal>\n\n          \n          <button type=\"button\" onClick={this.loadmore} style={{position:'relative',alignItems:'center'}}>Load More~</button>\n          \n         \n        </div>\n\n\n\n        \n       \n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport '../App.css'\nimport config from './config.js'\nimport useForm from './useForm'\n\nimport { Alert } from 'reactstrap';\n\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\nconst firebase = require('firebase')\n\nfunction AddMovie(){\n  \n    const [shouldRender , setShouldRender] = useState(true)\n    \n\n    let scrollRef = null; //used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\n\n\n    const guestBookStyle={\n       \n        backgroundColor: '#eadedb',\n        backgroundRepeat: 'repeat-y',\n        position: 'relative',\n        height: '80vh',\n        width: '100%',\n        display: 'flex',\n        //alignItems: 'center',\n        //justifyContent: 'center',\n        fontFamily: 'Raleway, sans-serif',\n        fontStyle: '2px', \n        //textTransform: 'uppercase',\n        letterSpacing: '1px'\n    }\n    const formInputFontStyle={\n      fontFamily: 'Raleway, sans-serif',\n      fontStyle: '32px', \n      marginBottom: '20px',\n    }\n\n    const formInputDivStyle={\n      position: 'relative',\n      fontSize: '12px',\n      left:'10vw',\n      top: '8vh'\n    }\n\n    const formPrintDivStyle={\n      position: 'absolute',\n      left:'35vw',\n      top: '8vh',\n      width: '60vw',\n      height: '60vh',\n      border: 'dotted blue',\n      borderWidth: '2px',\n      borderColor: '#2a4944',\n    }\n\n    const formLabelFontStyle={\n      fontFamily: 'lucida grande,arial',\n      fontSize: '1vw',\n      fontWeight: 'bold',\n      color: '#2E4A62',\n      position: 'relative',\n      top: '0vw',\n      left:'-1vw'\n    }\n   \n    useEffect(() => {\n      //console.log(\"shouldRender: \" + shouldRender);\n      if(!firebase.apps.length){\n          firebase.initializeApp(config)\n      }\n    })\n\n    \n    const [data,setData] = useState([]);\n        \n    const [values,setValues] = useState({newMovieID:\"\"}) \n\n    const handleTextChange = event =>{\n      console.log(event.target.name,\"new movie is:\" + event.target.value)\n      console.log(\"event.target.name is:\" + event.target.name)\n      setValues({    \n        [event.target.name]: event.target.value, \n        });\n        console.log(\"values.newMovieID\" + values.newMovieID)\n    };\n     \n    \n\n    //Submission function\n    const handleSubmit = event =>{  \n      console.log(\"enter submit callback for adding a new movie\")\n      event.preventDefault();\n      console.log(\"At submission, values.newMovieID is: \"+values.newMovieID)\n      let alreadyExist = false;\n      \n      //get a reference to the database\n      let AllLists = firebase.database().ref('AllLists')\n      let allMovies = AllLists.child('All')\n\n      allMovies.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        console.log(receivedJSON);\n        snapshot.forEach(function(childSnapshot){\n          var IMDbID = childSnapshot.child(\"IMDbID\").val();\n          if(IMDbID == values.newMovieID){\n            alreadyExist = true;\n          }\n        })\n      })\n\n      if(alreadyExist)\n        console.log(\"❌Movie already in database, not added\")\n      else  \n        console.log('✅ Movie not in database, now add')\n\n      //if not existed in our own database, find it in IMDB and store to our own\n      if(!alreadyExist){\n        const axios = require('axios').default; // axios.<method> will now provide autocomplete and parameter typings\n        \n        \n            let url=\"https://www.omdbapi.com/?apikey=16e23e6c&i=\" + values.newMovieID;\n            let recvPack = axios.get(url);\n            let packData     ;\n            let recvTitle    ;\n            let recvDirector ;\n            let recvRating   ;\n            let recvPosterURL;\n            let recvActors   ;\n            let recvGenre    ;\n            axios.get(url)  \n            .then(response => {\n                //A unique ID, Title, Poster source, Director, IMDbID, Actors\n                packData      = response.data;\n                recvTitle     = packData.Title;\n                recvDirector  = packData.Director;\n                recvRating    = packData.imdbRating;\n                recvPosterURL = packData.Poster;\n                recvActors    = packData.Actors;\n                recvGenre     = packData.Genre;\n                //console.log(movieURLs[index])\n                //movieArray[index].title = packData.data.Title;                  //new value    \n            })\n            .then(() => {\n                console.log(\"recvTitle is: \"+ recvTitle)\n                console.log(\"recvDirector is: \"+ recvDirector)\n                console.log(\"recvRating is: \"+ recvRating)\n                console.log(\"recvPosterURL is: \"+ recvPosterURL)\n                console.log(\"recvActors is: \"+ recvActors)  \n                console.log(\"recvGenre is: \"+ recvGenre)  \n                \n                firebase.database().ref('AllLists').child('All').child(values.newMovieID).set(\n                  {IMDbID: values.newMovieID,\n                  Title: recvTitle,\n                  PosterURL: recvPosterURL,\n                  Director: recvDirector,\n                  Actors: recvActors,\n                  Genre: recvGenre,\n                  Rating: recvRating\n                }\n                  );  \n                      \n            })\n        \n\n        \n      }\n      \n      setVisible(true);          \n      //set everything to default after submission\n      setValues({newMovieID:\"\"}) \n      \n      \n  }\n                                             \n\n                                                        \n      //used for configuring the alert box\n    const [visible, setVisible] = useState(false);\n    const onafterprint = () => setVisible(false);\n\nreturn(\n    <div className=\"GuestBook\" style={guestBookStyle}>\n        <form onSubmit={handleSubmit} noValidate>\n        \n          <div style={formInputDivStyle}> \n            <label style={formLabelFontStyle}>IMDBid</label>\n            <br/>\n            <input name=\"newMovieID\" type=\"newMovieID\" value={values.newMovieID} onChange={handleTextChange} style={formInputFontStyle}/>\n          </div>\n          \n  \n          <div style={formInputDivStyle} onClick={handleSubmit} >\n            <button type=\"submit\">submit</button>\n          </div>\n\n          \n          <Alert style={formInputDivStyle} color=\"info\" isOpen={visible} toggle={onafterprint} fade={true} >\n            Add request sent!\n          </Alert>\n        </form>\n        \n    </div>\n  \n)\n\n\n}\n\nexport default AddMovie;","import React, { useEffect, useState } from 'react'\nimport '../App.css'\nimport config from './config.js'\nimport useForm from './useForm'\n\nimport { Alert } from 'reactstrap';\n\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\nconst firebase = require('firebase')\n\nfunction CreateList(){\n    const CreateListStyle={\n       \n        backgroundColor: '#0e6e66',\n        backgroundRepeat: 'repeat-y',\n        position: 'relative',\n        height: '80vh',\n        width: '100%',\n        display: 'flex',\n        //alignItems: 'center',\n        //justifyContent: 'center',\n        fontFamily: 'Raleway, sans-serif',\n        fontStyle: '2px', \n        //textTransform: 'uppercase',\n        letterSpacing: '1px'\n    }\n    const formInputFontStyle={\n      fontFamily: 'Raleway, sans-serif',\n      fontStyle: '32px', \n      marginBottom: '20px',\n    }\n\n    const formInputDivStyle={\n      position: 'relative',\n      fontSize: '12px',\n      left:'10vw',\n      top: '8vh'\n    }\n\n\n    const formLabelFontStyle={\n      fontFamily: 'lucida grande,arial',\n      fontSize: '1vw',\n      fontWeight: 'bold',\n      color: '#2E4A62',\n      position: 'relative',\n      top: '0vw',\n      left:'-1vw'\n    }\n   \n    useEffect(() => {\n      if(!firebase.apps.length){\n        firebase.initializeApp(config)\n      }\n    })\n\n    const [values,setValues] = useState({newlist:\"\"}) \n\n    const handleTextChange = event =>{\n      console.log(event.target.name,\"newlist is:\" + event.target.value)\n      setValues({    \n        [event.target.name]: event.target.value, \n        });\n    };\n     \n    \n\n    //Submission function\n    const handleSubmit = event =>{  \n      console.log(\"enter submit callback\")\n      event.preventDefault();\n      // firebase.database().ref('data').push().set(values);\n      console.log(\"values.newlist is: \"+values.newlist)\n      firebase.database().ref('AllLists').child(values.newlist).set(\"\")  //just create an empty list with stub \"\"\n      setVisible(true);          \n      //set everything to default after submission\n      setValues({newlist:\"\"}) \n      }\n                                                     \n\n\n\n    //used for configuring the alert box\n    const [visible, setVisible] = useState(false);\n    const onafterprint = () => setVisible(false);\n\nreturn(\n    <div className=\"CreateList\" style={CreateListStyle}>\n        <form onSubmit={handleSubmit} noValidate>\n        \n          <div style={formInputDivStyle}> \n            <label style={formLabelFontStyle}>List Name</label>\n            <br/>\n            <input name=\"newlist\" type=\"newlist\" value={values.newlist} onChange={handleTextChange} style={formInputFontStyle}/>\n          </div>\n          \n  \n          <div style={formInputDivStyle} onClick={handleSubmit} >\n            <button type=\"submit\">submit</button>\n          </div>\n\n          \n          <Alert style={formInputDivStyle} color=\"info\" isOpen={visible} toggle={onafterprint} fade={true} >\n            The list is now added!\n          </Alert>\n        </form>\n        \n    </div>\n)\n\n\n}\n\nexport default CreateList;","import React, { Component } from 'react'\nimport Home from './Home'\nimport Videos from './Videos'\nimport Projects from './Projects'\n\nimport MovieGallery from './MovieGallery'\nimport AddMovie from './AddMovie'\nimport CreateList from './CreateList'\n\n\nexport class Body extends Component {\n    displayContent = () => {\n        var activeTab = this.props.activeTab\n        console.log(\"Body.js: activeTab is\",this.props.activeTab);\n        if(activeTab === 1)\n            return <MovieGallery/>\n        else if(activeTab === 2)\n            return <AddMovie/>\n        else if(activeTab === 3)\n            return <CreateList/>\n        else \n        return <MovieGallery/>\n    }\n    render() {\n        return (this.displayContent());\n\n    }\n}\n\nexport default Body;\n\n\n\n","import React, { Component } from 'react'\nimport TabList from './components/TabList'\nimport Body from './components/Body'\n\nimport \"./App.css\"\nexport class App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            activeTab: 1   //home is by default the tab selected\n        }\n\n        this.changeTab = (id) =>{   //whenever is function is execute, send me back the id\n            this.setState({\n                activeTab: id        \n            })\n            console.log(\"App.js: id is %d\",id)\n        }\n    }\n\n    \n    render() {\n        //add the states, in this case the active tabs\n        \n        //define tabs in the nevigation bar\n        const tablist = [\n            {id: 1,title: 'Movies'},\n            {id: 2,title: 'Add Movies'},\n            {id: 3,title: 'Create List'},\n        ]\n        return ( \n            <div className=\"body\" >\n                <div className=\"nav-bar\" >\n                    <TabList tabs={tablist}  activeTab={this.state.activeTab}  changeTab={this.changeTab}/>      \n                </div> \n                 <div className=\"main-body\" >\n                    <Body activeTab={this.state.activeTab}/>\n                </div> \n            </div>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}