{"ast":null,"code":"import _defineProperty from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'../App.css';import config from'./config.js';import useForm from'./useForm';import{Alert}from'reactstrap';/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/var firebase=require('firebase');function AddMovie(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),shouldRender=_useState2[0],setShouldRender=_useState2[1];var scrollRef=null;//used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\nvar guestBookStyle={backgroundColor:'#eadedb',backgroundRepeat:'repeat-y',position:'relative',height:'80vh',width:'100%',display:'flex',//alignItems: 'center',\n//justifyContent: 'center',\nfontFamily:'Raleway, sans-serif',fontStyle:'2px',//textTransform: 'uppercase',\nletterSpacing:'1px'};var formInputFontStyle={fontFamily:'Raleway, sans-serif',fontStyle:'32px',marginBottom:'20px'};var formInputDivStyle={position:'relative',fontSize:'12px',left:'10vw',top:'8vh'};var formPrintDivStyle={position:'absolute',left:'35vw',top:'8vh',width:'60vw',height:'60vh',border:'dotted blue',borderWidth:'2px',borderColor:'#2a4944'};var formLabelFontStyle={fontFamily:'lucida grande,arial',fontSize:'1vw',fontWeight:'bold',color:'#2E4A62',position:'relative',top:'0vw',left:'-1vw'};useEffect(function(){//console.log(\"shouldRender: \" + shouldRender);\nif(!firebase.apps.length){firebase.initializeApp(config);}});var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState({newMovieID:\"\"}),_useState6=_slicedToArray(_useState5,2),values=_useState6[0],setValues=_useState6[1];var handleTextChange=function handleTextChange(event){console.log(event.target.name,\"new movie is:\"+event.target.value);console.log(\"event.target.name is:\"+event.target.name);setValues(_defineProperty({},event.target.name,event.target.value));console.log(\"values.newMovieID\"+values.newMovieID);};//Submission function\nvar handleSubmit=function handleSubmit(event){console.log(\"enter submit callback for adding a new movie\");event.preventDefault();console.log(\"At submission, values.newMovieID is: \"+values.newMovieID);var alreadyExist=false;//get a reference to the database\nvar AllLists=firebase.database().ref('AllLists');var allMovies=AllLists.child('All');allMovies.on('value',function(snapshot){var receivedJSON=snapshot.val();console.log(receivedJSON);snapshot.forEach(function(childSnapshot){var IMDbID=childSnapshot.child(\"IMDbID\").val();if(IMDbID==values.newMovieID){alreadyExist=true;}});});if(alreadyExist)console.log(\"❌Movie already in database, not added\");else console.log('✅ Movie not in database, now add');//if not existed in our own database, find it in IMDB and store to our own\nif(!alreadyExist){var axios=require('axios').default;// axios.<method> will now provide autocomplete and parameter typings\nvar url=\"https://www.omdbapi.com/?apikey=16e23e6c&i=\"+values.newMovieID;var recvPack=axios.get(url);var packData;var recvTitle;var recvDirector;var recvRating;var recvPosterURL;var recvActors;var recvGenre;axios.get(url).then(function(response){//A unique ID, Title, Poster source, Director, IMDbID, Actors\npackData=response.data;recvTitle=packData.Title;recvDirector=packData.Director;recvRating=packData.imdbRating;recvPosterURL=packData.Poster;recvActors=packData.Actors;recvGenre=packData.Genre;//console.log(movieURLs[index])\n//movieArray[index].title = packData.data.Title;                  //new value    \n}).then(function(){console.log(\"recvTitle is: \"+recvTitle);console.log(\"recvDirector is: \"+recvDirector);console.log(\"recvRating is: \"+recvRating);console.log(\"recvPosterURL is: \"+recvPosterURL);console.log(\"recvActors is: \"+recvActors);console.log(\"recvGenre is: \"+recvGenre);firebase.database().ref('AllLists').child('All').child(values.newMovieID).set({IMDbID:values.newMovieID,Title:recvTitle,PosterURL:recvPosterURL,Director:recvDirector,Actors:recvActors,Genre:recvGenre,Rating:recvRating});});}setVisible(true);//set everything to default after submission\nsetValues({newMovieID:\"\"});};//used for configuring the alert box\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),visible=_useState8[0],setVisible=_useState8[1];var onafterprint=function onafterprint(){return setVisible(false);};return/*#__PURE__*/React.createElement(\"div\",{className:\"GuestBook\",style:guestBookStyle},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,noValidate:true},/*#__PURE__*/React.createElement(\"div\",{style:formInputDivStyle},/*#__PURE__*/React.createElement(\"label\",{style:formLabelFontStyle},\"IMDBid\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{name:\"newMovieID\",type:\"newMovieID\",value:values.newMovieID,onChange:handleTextChange,style:formInputFontStyle})),/*#__PURE__*/React.createElement(\"div\",{style:formInputDivStyle,onClick:handleSubmit},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"submit\")),/*#__PURE__*/React.createElement(Alert,{style:formInputDivStyle,color:\"info\",isOpen:visible,toggle:onafterprint,fade:true},\"Add request sent!\")));}export default AddMovie;","map":{"version":3,"sources":["/home/luyao/Desktop/CS185/my_movie_site/src/components/AddMovie.js"],"names":["React","useEffect","useState","config","useForm","Alert","firebase","require","AddMovie","shouldRender","setShouldRender","scrollRef","guestBookStyle","backgroundColor","backgroundRepeat","position","height","width","display","fontFamily","fontStyle","letterSpacing","formInputFontStyle","marginBottom","formInputDivStyle","fontSize","left","top","formPrintDivStyle","border","borderWidth","borderColor","formLabelFontStyle","fontWeight","color","apps","length","initializeApp","data","setData","newMovieID","values","setValues","handleTextChange","event","console","log","target","name","value","handleSubmit","preventDefault","alreadyExist","AllLists","database","ref","allMovies","child","on","snapshot","receivedJSON","val","forEach","childSnapshot","IMDbID","axios","default","url","recvPack","get","packData","recvTitle","recvDirector","recvRating","recvPosterURL","recvActors","recvGenre","then","response","Title","Director","imdbRating","Poster","Actors","Genre","set","PosterURL","Rating","setVisible","visible","onafterprint"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../App.css'\nimport config from './config.js'\nimport useForm from './useForm'\n\nimport { Alert } from 'reactstrap';\n\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\nconst firebase = require('firebase')\n\nfunction AddMovie(){\n  \n    const [shouldRender , setShouldRender] = useState(true)\n    \n\n    let scrollRef = null; //used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\n\n\n    const guestBookStyle={\n       \n        backgroundColor: '#eadedb',\n        backgroundRepeat: 'repeat-y',\n        position: 'relative',\n        height: '80vh',\n        width: '100%',\n        display: 'flex',\n        //alignItems: 'center',\n        //justifyContent: 'center',\n        fontFamily: 'Raleway, sans-serif',\n        fontStyle: '2px', \n        //textTransform: 'uppercase',\n        letterSpacing: '1px'\n    }\n    const formInputFontStyle={\n      fontFamily: 'Raleway, sans-serif',\n      fontStyle: '32px', \n      marginBottom: '20px',\n    }\n\n    const formInputDivStyle={\n      position: 'relative',\n      fontSize: '12px',\n      left:'10vw',\n      top: '8vh'\n    }\n\n    const formPrintDivStyle={\n      position: 'absolute',\n      left:'35vw',\n      top: '8vh',\n      width: '60vw',\n      height: '60vh',\n      border: 'dotted blue',\n      borderWidth: '2px',\n      borderColor: '#2a4944',\n    }\n\n    const formLabelFontStyle={\n      fontFamily: 'lucida grande,arial',\n      fontSize: '1vw',\n      fontWeight: 'bold',\n      color: '#2E4A62',\n      position: 'relative',\n      top: '0vw',\n      left:'-1vw'\n    }\n   \n    useEffect(() => {\n      //console.log(\"shouldRender: \" + shouldRender);\n      if(!firebase.apps.length){\n          firebase.initializeApp(config)\n      }\n    })\n\n    \n    const [data,setData] = useState([]);\n        \n    const [values,setValues] = useState({newMovieID:\"\"}) \n\n    const handleTextChange = event =>{\n      console.log(event.target.name,\"new movie is:\" + event.target.value)\n      console.log(\"event.target.name is:\" + event.target.name)\n      setValues({    \n        [event.target.name]: event.target.value, \n        });\n        console.log(\"values.newMovieID\" + values.newMovieID)\n    };\n     \n    \n\n    //Submission function\n    const handleSubmit = event =>{  \n      console.log(\"enter submit callback for adding a new movie\")\n      event.preventDefault();\n      console.log(\"At submission, values.newMovieID is: \"+values.newMovieID)\n      let alreadyExist = false;\n      \n      //get a reference to the database\n      let AllLists = firebase.database().ref('AllLists')\n      let allMovies = AllLists.child('All')\n\n      allMovies.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        console.log(receivedJSON);\n        snapshot.forEach(function(childSnapshot){\n          var IMDbID = childSnapshot.child(\"IMDbID\").val();\n          if(IMDbID == values.newMovieID){\n            alreadyExist = true;\n          }\n        })\n      })\n\n      if(alreadyExist)\n        console.log(\"❌Movie already in database, not added\")\n      else  \n        console.log('✅ Movie not in database, now add')\n\n      //if not existed in our own database, find it in IMDB and store to our own\n      if(!alreadyExist){\n        const axios = require('axios').default; // axios.<method> will now provide autocomplete and parameter typings\n        \n        \n            let url=\"https://www.omdbapi.com/?apikey=16e23e6c&i=\" + values.newMovieID;\n            let recvPack = axios.get(url);\n            let packData     ;\n            let recvTitle    ;\n            let recvDirector ;\n            let recvRating   ;\n            let recvPosterURL;\n            let recvActors   ;\n            let recvGenre    ;\n            axios.get(url)  \n            .then(response => {\n                //A unique ID, Title, Poster source, Director, IMDbID, Actors\n                packData      = response.data;\n                recvTitle     = packData.Title;\n                recvDirector  = packData.Director;\n                recvRating    = packData.imdbRating;\n                recvPosterURL = packData.Poster;\n                recvActors    = packData.Actors;\n                recvGenre     = packData.Genre;\n                //console.log(movieURLs[index])\n                //movieArray[index].title = packData.data.Title;                  //new value    \n            })\n            .then(() => {\n                console.log(\"recvTitle is: \"+ recvTitle)\n                console.log(\"recvDirector is: \"+ recvDirector)\n                console.log(\"recvRating is: \"+ recvRating)\n                console.log(\"recvPosterURL is: \"+ recvPosterURL)\n                console.log(\"recvActors is: \"+ recvActors)  \n                console.log(\"recvGenre is: \"+ recvGenre)  \n                \n                firebase.database().ref('AllLists').child('All').child(values.newMovieID).set(\n                  {IMDbID: values.newMovieID,\n                  Title: recvTitle,\n                  PosterURL: recvPosterURL,\n                  Director: recvDirector,\n                  Actors: recvActors,\n                  Genre: recvGenre,\n                  Rating: recvRating\n                }\n                  );  \n                      \n            })\n        \n\n        \n      }\n      \n      setVisible(true);          \n      //set everything to default after submission\n      setValues({newMovieID:\"\"}) \n      \n      \n  }\n                                             \n\n                                                        \n      //used for configuring the alert box\n    const [visible, setVisible] = useState(false);\n    const onafterprint = () => setVisible(false);\n\nreturn(\n    <div className=\"GuestBook\" style={guestBookStyle}>\n        <form onSubmit={handleSubmit} noValidate>\n        \n          <div style={formInputDivStyle}> \n            <label style={formLabelFontStyle}>IMDBid</label>\n            <br/>\n            <input name=\"newMovieID\" type=\"newMovieID\" value={values.newMovieID} onChange={handleTextChange} style={formInputFontStyle}/>\n          </div>\n          \n  \n          <div style={formInputDivStyle} onClick={handleSubmit} >\n            <button type=\"submit\">submit</button>\n          </div>\n\n          \n          <Alert style={formInputDivStyle} color=\"info\" isOpen={visible} toggle={onafterprint} fade={true} >\n            Add request sent!\n          </Alert>\n        </form>\n        \n    </div>\n  \n)\n\n\n}\n\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}