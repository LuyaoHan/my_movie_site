{"ast":null,"code":"import _defineProperty from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/luyao/Desktop/CS185/my_movie_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useState,Component}from\"react\";import Movie from\"./movie_element.js\";import GridList from\"@material-ui/core/GridList\";import Modal from\"@material-ui/core/Modal\";import IconButton from\"@material-ui/core/IconButton\";import DeleteSweepIcon from'@material-ui/icons/DeleteSweep';import{ButtonDropdown,DropdownToggle,DropdownMenu,DropdownItem}from'reactstrap';import Dropdown from'./Dropdown';import config from'./config.js';function rootStyle(){return{display:\"flex\",flexWrap:\"wrap\",justifyContent:\"space-around\",overflow:\"hidden\"};}function GridListStyle(){return{width:\"95%\",height:\"85vh\"//position: \"fixed\",\n// Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n//transform: \"translateZ(0)\",\n};}function info(){return{width:\"auto\",height:\"auto\",justifyContent:\"center\",textAlign:\"center\",paddingTop:\"23%\",paddingLeft:\"10px\",paddingRight:\"10px\",lineHeight:\"200%\",backgroundColor:\"#c3cfe2\"};}function getModalStyle(){return{top:\"20%\",left:\"20%\",backgroundColor:\"transparent\",position:\"absolute\",display:\"flex\"};}//Fetch data from firebase\nvar firebase=require('firebase');var MovieGallery=/*#__PURE__*/function(_Component){_inherits(MovieGallery,_Component);var _super=_createSuper(MovieGallery);function MovieGallery(){var _this;_classCallCheck(this,MovieGallery);_this=_super.call(this);_this.state={moviePoster:\"\",open:false,key:1,isOpen:false,toggle:0,visible:8,movies_list:[],perf_listSelection:[],//perf_list: [],  //All, wannaWatch, Watched, etc\nlistShown:[],movie_perf_pairs:[]};_this.changeMoviePoster=function(data){_this.setState({moviePoster:data});};_this.changeKey=function(k){_this.setState({key:k});};_this.setOpen=function(o){_this.setState({open:o});};_this.loadmore=_this.loadmore.bind(_assertThisInitialized(_this));//bind evnt handler! \n_this.listSelectOnChange=_this.listSelectOnChange.bind(_assertThisInitialized(_this));_this.ModalDropOptions=_this.ModalDropOptions.bind(_assertThisInitialized(_this));_this.perf_list=[];//initialize firebase\nif(!firebase.apps.length){firebase.initializeApp(config);}return _this;}//load more button \n_createClass(MovieGallery,[{key:\"loadmore\",value:function loadmore(){//binded in constructor\nthis.setState(function(old){return{visible:old.visible+8};//trys to set visible 8 more movies   \n});}},{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;if(!firebase.apps.length){firebase.initializeApp(config);}console.log(\"component will mount!\");var AllLists=firebase.database().ref('AllLists');var allMovies=AllLists.child('All');//\n//  Update all movies info from data base\n//\nvar recvObjects=[];var cnt=0;allMovies.on('value',function(snapshot){var receivedJSON=snapshot.val();//console.log(receivedJSON);\n//loop through all movies in database\nsnapshot.forEach(function(childSnapshot){//receive single movie info\nvar recvIMDbID=childSnapshot.child(\"IMDbID\").val();var recvTitle=childSnapshot.child(\"Title\").val();var recvDirector=childSnapshot.child(\"Director\").val();var recvRating=childSnapshot.child(\"Rating\").val();var recvPosterURL=childSnapshot.child(\"PosterURL\").val();var recvActors=childSnapshot.child(\"Actors\").val();var recvGenre=childSnapshot.child(\"Genre\").val();var recvKey=childSnapshot.child(\"IMDbID\").val();recvObjects.push({key:recvKey,IMDbID:recvIMDbID,Title:recvTitle,PosterURL:recvPosterURL,Director:recvDirector,Actors:recvActors,Genre:recvGenre,Rating:recvRating});//make into object      \n});_this2.setState({movies_list:[].concat(_toConsumableArray(_this2.state.movies_list),recvObjects)});//console.log(\"in state: \" + this.state.movies_list) //expected print [object object] ... \n});//\n//  Update all lists names only\n//\n// let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\nvar perfArraySelection=[];var cnt=0;AllLists.on('value',function(snapshot){var receivedJSON=snapshot.val();//console.log(receivedJSON);\n//loop through all movies in database\nsnapshot.forEach(function(item,index){//receive single movie info\nperfArraySelection.push(item.key);//get the list\n//console.log(\"perference list name is: \" + perfArraySelection);\n//make into object      \n});_this2.setState({perf_listSelection:[].concat(_toConsumableArray(_this2.state.perf_listSelection),perfArraySelection)});});//\n//  Gets all the lists and list movie info\n//\n//let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\nvar perfArray=[];var movie=[];var cnt=0;var moviesMasterArray=[];//used to collect all movie lists \nvar moviesInOneArray=[];//records all movies in one list\nAllLists.on('value',function(snapshot){var receivedJSON=snapshot.val();//console.log(receivedJSON);\n//loop through all movies in database\n//console.log(\"here\");\nsnapshot.forEach(function(eachList,index){//all the lists \n//console.log(eachList.key);          //print each list name     \neachList.forEach(function(singleMovie){//print movie name\n//console.log(singleMovie.key+\": \"+singleMovie.val()); //generates random key\n//console.log(\"movie title: \"+singleMovie.child('Title').val())\nvar recvIMDbID=singleMovie.child(\"IMDbID\").val();var recvTitle=singleMovie.child(\"Title\").val();var recvDirector=singleMovie.child(\"Director\").val();var recvRating=singleMovie.child(\"Rating\").val();var recvPosterURL=singleMovie.child(\"PosterURL\").val();var recvActors=singleMovie.child(\"Actors\").val();var recvGenre=singleMovie.child(\"Genre\").val();var recvKey=singleMovie.child(\"IMDbID\").val();moviesInOneArray.push({key:recvKey,IMDbID:recvIMDbID,Title:recvTitle,PosterURL:recvPosterURL,Director:recvDirector,Actors:recvActors,Genre:recvGenre,Rating:recvRating});});//collected all movies in one list\n});moviesMasterArray.push(moviesInOneArray);//console.log(moviesMasterArray)\n_this2.perf_list=moviesMasterArray;// this.setState({\n//   perf_list:[...moviesMasterArray]\n// })\n// /console.log(\"moviesMasterArray\"+moviesMasterArray)\n//console.log(\"perf list is \"+this.state.perf_list)\n_this2.forceUpdate();//console.log(this.state.perf_list[1]); //sets to the All list\n//set to listShown so that gallery display the correct posters\n_this2.setState({listShown:_toConsumableArray(_this2.perf_list[0])});});this.forceUpdate();//\n//  Prepare movie-perferencelist pairs\n//\nconsole.log(\"printing perf names\");var movie_perf_Array=[];AllLists.on('value',function(snapshot){var receivedJSON=snapshot.val();snapshot.child('movie_perf_pairs').forEach(function(eachPair,index){//all the lists \nvar recvIMDbID=eachPair.child(\"IMDbID\").val();console.log(\"movie is: \"+recvIMDbID);eachPair.child('perfs').forEach(function(perfName,index){console.log(perfName.val());});//collected all movies in one list\n});moviesMasterArray.push(moviesInOneArray);//console.log(moviesMasterArray)\n_this2.perf_list=moviesMasterArray;// this.setState({\n//   perf_list:[...moviesMasterArray]\n// })\n// /console.log(\"moviesMasterArray\"+moviesMasterArray)\n//console.log(\"perf list is \"+this.state.perf_list)\n_this2.forceUpdate();//console.log(this.state.perf_list[1]); //sets to the All list\n//set to listShown so that gallery display the correct posters\n_this2.setState({listShown:_toConsumableArray(_this2.perf_list[0])});});this.forceUpdate();}//user chosed list of movie to display in gallery\n},{key:\"listSelectOnChange\",value:function listSelectOnChange(e){console.log(\"target value: \"+e.target.index);//set it to the state\nthis.setState(_defineProperty({},this.state.active_list,this.state.perf_listSelection[e.target.index]));console.log(\"list selected: \"+this.state.list_selected);}},{key:\"ModalDropOptions\",value:function ModalDropOptions(e){this.state.perf_listSelection.map(function(e,key){return/*#__PURE__*/React.createElement(\"option\",{key:key,value:e.value},e);});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"block\"}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"select\",{name:\"perf_listSelection\",onChange:this.listSelectOnChange},this.state.perf_listSelection.map(function(e,key){//console.log(\"key is \"+ key)\nreturn/*#__PURE__*/React.createElement(\"option\",{key:key,value:e.value},e);}))),/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(GridList,{cellHeight:150,spacing:1,style:GridListStyle()},this.state.movies_list.slice(0,this.state.visible).map(function(movie){return/*#__PURE__*/React.createElement(Movie,{movieid:movie.IMDbID,indexKey:movie.key,changeIndexKey:_this3.changeKey,setOpen:_this3.setOpen,changeMoviePoster:_this3.changeMoviePoster});})),/*#__PURE__*/React.createElement(Modal,{open:this.state.open,onClose:function onClose(){_this3.setOpen(false);},\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\"},/*#__PURE__*/React.createElement(\"div\",{style:getModalStyle()},/*#__PURE__*/React.createElement(\"div\",{style:info()},/*#__PURE__*/React.createElement(\"h7\",null,\"Title: \",this.state.moviePoster.Title,\" \",/*#__PURE__*/React.createElement(\"br\",null),\"Director: \",this.state.moviePoster.Director,\" \",/*#__PURE__*/React.createElement(\"br\",null),\"Genre: \",this.state.moviePoster.Genre,/*#__PURE__*/React.createElement(\"br\",null),\"IMDB Rating: \",this.state.moviePoster.imdbRating),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"select\",{name:\"perf_listSelection\"},this.ModalDropOptions))),/*#__PURE__*/React.createElement(\"img\",{src:this.state.moviePoster.Poster,height:\"auto\",alt:\"poster\"}),/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){{/*Remember that in state key === IMDBkey!*/}var deleteTargetKey=_this3.state.key;//key, which is IMDbID of the movie\nvar newMovieArray=[];console.log('delete target'+_this3.state.key);_this3.state.movies_list.forEach(function(item,index){console.log('item key'+item.key);if(item.key!=_this3.state.key){newMovieArray.push(item);//push every item except delete target\nconsole.log(\"here\");console.log(item.Title);}});console.log(newMovieArray);_this3.setState({movies_list:[].concat(newMovieArray)});//this.forceUpdate();\n//firebase.database().ref('AllLists').child(\"All\").child(this.state.key).remove()\n_this3.setOpen(false);//this.forceUpdate();\n}},/*#__PURE__*/React.createElement(DeleteSweepIcon,{style:{color:\"red\"}})))),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:this.loadmore,style:{position:'relative',alignItems:'center'}},\"Load More~\")));}}]);return MovieGallery;}(Component);export{MovieGallery as default};","map":{"version":3,"sources":["/home/luyao/Desktop/CS185/my_movie_site/src/components/MovieGallery.js"],"names":["React","useState","Component","Movie","GridList","Modal","IconButton","DeleteSweepIcon","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Dropdown","config","rootStyle","display","flexWrap","justifyContent","overflow","GridListStyle","width","height","info","textAlign","paddingTop","paddingLeft","paddingRight","lineHeight","backgroundColor","getModalStyle","top","left","position","firebase","require","MovieGallery","state","moviePoster","open","key","isOpen","toggle","visible","movies_list","perf_listSelection","listShown","movie_perf_pairs","changeMoviePoster","data","setState","changeKey","k","setOpen","o","loadmore","bind","listSelectOnChange","ModalDropOptions","perf_list","apps","length","initializeApp","old","console","log","AllLists","database","ref","allMovies","child","recvObjects","cnt","on","snapshot","receivedJSON","val","forEach","childSnapshot","recvIMDbID","recvTitle","recvDirector","recvRating","recvPosterURL","recvActors","recvGenre","recvKey","push","IMDbID","Title","PosterURL","Director","Actors","Genre","Rating","perfArraySelection","item","index","perfArray","movie","moviesMasterArray","moviesInOneArray","eachList","singleMovie","forceUpdate","movie_perf_Array","eachPair","perfName","e","target","active_list","list_selected","map","value","slice","imdbRating","Poster","deleteTargetKey","newMovieArray","color","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\n\nimport Movie from \"./movie_element.js\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Modal from \"@material-ui/core/Modal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport config from './config.js'\n\n\nfunction rootStyle() {\n  return {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  };\n}\nfunction GridListStyle() {\n  return {\n    width: \"95%\",\n    height: \"85vh\",\n    //position: \"fixed\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    //transform: \"translateZ(0)\",\n  };\n}\nfunction info() {\n  return {\n    width: \"auto\",\n    height: \"auto\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingTop: \"23%\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    lineHeight: \"200%\",\n    backgroundColor: \"#c3cfe2\",\n  };\n}\nfunction getModalStyle() {\n  return {\n    top: \"20%\",\n    left: \"20%\",\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    display: \"flex\",\n  };\n}\n\n\n//Fetch data from firebase\nconst firebase = require('firebase');\n\n\nexport default class MovieGallery extends Component {\n    \n  \n  constructor() {\n        super();\n        this.state = {\n          moviePoster: \"\",\n          open: false,\n          key: 1,\n          isOpen: false,\n          toggle: 0,\n          visible: 8,\n          movies_list: [], \n          perf_listSelection: [],  \n          //perf_list: [],  //All, wannaWatch, Watched, etc\n          listShown:[],\n          movie_perf_pairs:[]\n        };\n        this.changeMoviePoster = (data) => {\n          this.setState({\n            moviePoster: data,\n          });\n        };\n        this.changeKey = (k) => {\n          this.setState({\n            key: k,\n          });\n        };\n        this.setOpen = (o) => {\n          this.setState({\n            open: o,\n          });\n        };\n\n        this.loadmore = this.loadmore.bind(this);  //bind evnt handler! \n        this.listSelectOnChange = this.listSelectOnChange.bind(this)\n        this.ModalDropOptions = this.ModalDropOptions.bind(this)\n        this.perf_list = [];\n      //initialize firebase\n        if(!firebase.apps.length){\n          firebase.initializeApp(config)\n      }\n\n    \n      \n\n      \n\n  }\n\n  //load more button \n  loadmore(){         //binded in constructor\n    this.setState((old)=>{\n      return {visible: old.visible + 8}  //trys to set visible 8 more movies   \n    })\n  }\n  \n  \n  \n  componentWillMount(){\n\n    if(!firebase.apps.length){\n      firebase.initializeApp(config)\n  }\n    console.log(\"component will mount!\")\n      let AllLists = firebase.database().ref('AllLists')\n      let allMovies = AllLists.child('All')\n\n      //\n      //  Update all movies info from data base\n      //\n      var recvObjects = [];\n      var cnt = 0;\n      allMovies.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n\n        //loop through all movies in database\n        snapshot.forEach(function(childSnapshot){\n          //receive single movie info\n          var recvIMDbID        = childSnapshot.child(\"IMDbID\").val();\n          var recvTitle         = childSnapshot.child(\"Title\").val();\n          var recvDirector      = childSnapshot.child(\"Director\").val();\n          var recvRating        = childSnapshot.child(\"Rating\").val();\n          var recvPosterURL     = childSnapshot.child(\"PosterURL\").val();\n          var recvActors        = childSnapshot.child(\"Actors\").val();\n          var recvGenre         = childSnapshot.child(\"Genre\").val();\n          var recvKey               = childSnapshot.child(\"IMDbID\").val();\n          recvObjects.push({\n              key:        recvKey,\n              IMDbID:     recvIMDbID,      \n              Title:      recvTitle,\n              PosterURL:  recvPosterURL,\n              Director:   recvDirector,\n              Actors:     recvActors,\n              Genre:      recvGenre,\n              Rating:     recvRating\n          })\n          //make into object      \n        })\n        \n\n        this.setState({\n          movies_list:[...this.state.movies_list,...recvObjects]\n        })\n        //console.log(\"in state: \" + this.state.movies_list) //expected print [object object] ... \n      })\n\n      //\n      //  Update all lists names only\n      //\n      // let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n      var perfArraySelection = [];\n      var cnt = 0;\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n        //loop through all movies in database\n        snapshot.forEach((item, index) =>{\n          //receive single movie info\n          perfArraySelection.push(item.key); //get the list\n          \n          //console.log(\"perference list name is: \" + perfArraySelection);\n        \n          //make into object      \n        })\n        this.setState({ \n          perf_listSelection:[...this.state.perf_listSelection,...perfArraySelection]\n        })\n       \n      });\n  \n\n\n       //\n      //  Gets all the lists and list movie info\n      //\n      //let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n      var perfArray = [];\n      var movie = [];\n      var cnt = 0;\n      var moviesMasterArray = []; //used to collect all movie lists \n      var moviesInOneArray = [];  //records all movies in one list\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n        //loop through all movies in database\n        \n        //console.log(\"here\");\n        snapshot.forEach((eachList, index) =>{ //all the lists \n              //console.log(eachList.key);          //print each list name     \n              eachList.forEach(function(singleMovie){    //print movie name\n                            //console.log(singleMovie.key+\": \"+singleMovie.val()); //generates random key\n\n                            //console.log(\"movie title: \"+singleMovie.child('Title').val())\n                            var recvIMDbID        = singleMovie.child(\"IMDbID\").val();\n                            var recvTitle         = singleMovie.child(\"Title\").val();\n                            var recvDirector      = singleMovie.child(\"Director\").val();\n                            var recvRating        = singleMovie.child(\"Rating\").val();\n                            var recvPosterURL     = singleMovie.child(\"PosterURL\").val();\n                            var recvActors        = singleMovie.child(\"Actors\").val();\n                            var recvGenre         = singleMovie.child(\"Genre\").val();\n                            var recvKey           = singleMovie.child(\"IMDbID\").val();\n                            moviesInOneArray.push({\n                                key:        recvKey,\n                                IMDbID:     recvIMDbID,      \n                                Title:      recvTitle,\n                                PosterURL:  recvPosterURL,\n                                Director:   recvDirector,\n                                Actors:     recvActors,\n                                Genre:      recvGenre,\n                                Rating:     recvRating\n                            })\n                  \n              })\n              //collected all movies in one list\n        })\n        moviesMasterArray.push(moviesInOneArray);\n        //console.log(moviesMasterArray)\n        \n        this.perf_list=moviesMasterArray;\n        // this.setState({\n        //   perf_list:[...moviesMasterArray]\n        // })\n        // /console.log(\"moviesMasterArray\"+moviesMasterArray)\n        //console.log(\"perf list is \"+this.state.perf_list)\n        this.forceUpdate();\n        //console.log(this.state.perf_list[1]); //sets to the All list\n        \n        //set to listShown so that gallery display the correct posters\n        this.setState({\n          listShown:[...this.perf_list[0]]\n        })\n      });\n      this.forceUpdate();\n\n\n\n\n\n      //\n      //  Prepare movie-perferencelist pairs\n      //\n      console.log(\"printing perf names\")\n      var movie_perf_Array = [];\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        snapshot.child('movie_perf_pairs').forEach((eachPair, index) =>{ //all the lists \n                var recvIMDbID        = eachPair.child(\"IMDbID\").val();\n                console.log(\"movie is: \" + recvIMDbID)\n                eachPair.child('perfs').forEach((perfName,index)=>{\n                    console.log(perfName.val())\n                })\n                \n              //collected all movies in one list\n        })\n        moviesMasterArray.push(moviesInOneArray);\n        //console.log(moviesMasterArray)\n        \n        this.perf_list=moviesMasterArray;\n        // this.setState({\n        //   perf_list:[...moviesMasterArray]\n        // })\n        // /console.log(\"moviesMasterArray\"+moviesMasterArray)\n        //console.log(\"perf list is \"+this.state.perf_list)\n        this.forceUpdate();\n        //console.log(this.state.perf_list[1]); //sets to the All list\n        \n        //set to listShown so that gallery display the correct posters\n        this.setState({\n          listShown:[...this.perf_list[0]]\n        })\n      });\n      this.forceUpdate();\n      \n      \n}\n\n\n\n\n\n\n\n  //user chosed list of movie to display in gallery\n  listSelectOnChange(e) {\n    console.log(\"target value: \"+e.target.index)\n    //set it to the state\n    this.setState({\n      [this.state.active_list]: this.state.perf_listSelection[e.target.index]\n    });\n\n    console.log(\"list selected: \"+this.state.list_selected)\n  }\n\n\n\n  ModalDropOptions(e){\n\n    this.state.perf_listSelection.map((e, key) => {\n      \n      return <option key={key} value={e.value}>{e}</option>;\n    })\n    \n  }\n\n  render() {\n    \n\n    return (\n      <div style={{display:\"block\"}}>\n        <div>\n          {/*Dropdown menu*/}\n          <select name=\"perf_listSelection\" onChange={this.listSelectOnChange}>\n            {this.state.perf_listSelection.map((e, key) => {\n              //console.log(\"key is \"+ key)\n              return <option key={key} value={e.value}>{e}</option>;\n            })}\n            \n          </select>\n        </div>\n        \n          <div>\n            \n                \n            \n\n          </div>\n\n\n        <div>\n          <GridList cellHeight={150} spacing={1} style={GridListStyle()}>\n                {/*{this.state.movies_list.slice(0,this.state.visible).map((movie) => (  */}\n                  \n                \n                  {(this.state.movies_list).slice(0,this.state.visible).map((movie) => (\n                    \n                  <Movie\n                    movieid={movie.IMDbID}\n                    indexKey={movie.key}\n                    changeIndexKey={this.changeKey}\n                    setOpen={this.setOpen}\n                    changeMoviePoster={this.changeMoviePoster}\n                  />\n                ))}\n          </GridList>\n\n\n\n\n          <Modal\n            open={this.state.open}\n            onClose={() => {\n              this.setOpen(false);\n            }}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {\n              <div style={getModalStyle()}>\n                <div style={info()}>\n                  <h7>\n                    Title: {this.state.moviePoster.Title} <br />\n                    Director: {this.state.moviePoster.Director} <br />\n                    Genre: {this.state.moviePoster.Genre}\n                    <br />\n                    IMDB Rating: {this.state.moviePoster.imdbRating}\n\n                  </h7>\n                    <div>\n                      <select name=\"perf_listSelection\" >\n                        {\n                          this.ModalDropOptions\n                          \n                        }\n                      </select>\n                    </div>\n                </div>\n                <img\n                  src={this.state.moviePoster.Poster}\n                  height={\"auto\"}\n                  alt={\"poster\"}\n                />\n\n                <IconButton onClick={() => {\n                    {/*Remember that in state key === IMDBkey!*/} \n                    const  deleteTargetKey = this.state.key; //key, which is IMDbID of the movie\n                    var newMovieArray = [];\n                    console.log('delete target' + this.state.key);\n                    this.state.movies_list.forEach((item, index) => {\n                      console.log('item key' + item.key);\n                      if(item.key != this.state.key){\n                        newMovieArray.push(item);  //push every item except delete target\n                        console.log(\"here\")\n                        console.log(item.Title)\n                      }\n                    });\n                    console.log(newMovieArray)\n                    \n                    \n                     this.setState({\n                       movies_list:[...newMovieArray]    \n                     })\n                     //this.forceUpdate();\n                     //firebase.database().ref('AllLists').child(\"All\").child(this.state.key).remove()\n                     \n                    this.setOpen(false);\n                     //this.forceUpdate();\n\n                  }} > \n                \n                  <DeleteSweepIcon\n                    style={{ color: \"red\" }}\n                  />\n                </IconButton>\n                \n              </div>\n            }\n          </Modal>\n\n          \n          <button type=\"button\" onClick={this.loadmore} style={{position:'relative',alignItems:'center'}}>Load More~</button>\n          \n         \n        </div>\n\n\n\n        \n       \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}